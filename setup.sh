#!/bin/bash

# Claude Screenshot Uploader - Setup Script
# This script will install and configure the screenshot uploader

set -e

echo "🚀 Claude Screenshot Uploader Setup"
echo "===================================="
echo ""

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if running on macOS
if [[ "$OSTYPE" != "darwin"* ]]; then
    echo -e "${RED}❌ This script only works on macOS${NC}"
    exit 1
fi

echo "📋 Checking dependencies..."

# Check for Homebrew
if ! command -v brew &> /dev/null; then
    echo -e "${YELLOW}⚠️  Homebrew not found. Installing...${NC}"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

# Check for fswatch
if ! command -v fswatch &> /dev/null && ! [ -f /opt/homebrew/bin/fswatch ]; then
    echo -e "${YELLOW}⚠️  fswatch not found. Installing...${NC}"
    brew install fswatch
else
    echo -e "${GREEN}✅ fswatch found${NC}"
fi

# Check for xbar (optional)
if ! [ -d "/Applications/xbar.app" ]; then
    echo -e "${YELLOW}ℹ️  xbar not found (optional for menu bar icon)${NC}"
    echo "   Install from: https://xbarapp.com"
    echo ""
    read -p "Do you want to install xbar now? (y/n) " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        brew install --cask xbar
    fi
else
    echo -e "${GREEN}✅ xbar found${NC}"
fi

echo ""
echo "📁 Setting up directories..."

# Create Screenshots directory
mkdir -p ~/Screenshots
echo -e "${GREEN}✅ Created ~/Screenshots directory${NC}"

# Copy main script
SCRIPT_DIR="$HOME/claude-screenshot-uploader"
mkdir -p "$SCRIPT_DIR"
cp screenshot_uploader.sh "$SCRIPT_DIR/"
chmod +x "$SCRIPT_DIR/screenshot_uploader.sh"
echo -e "${GREEN}✅ Installed main script${NC}"

# Setup configuration
CONFIG_FILE="$HOME/.claude-screenshot-uploader.conf"
if [ ! -f "$CONFIG_FILE" ]; then
    echo ""
    echo "⚙️  Let's configure your server settings:"
    echo ""
    
    read -p "Server hostname or IP: " server_host
    read -p "SSH username: " server_user
    read -p "Remote path for screenshots [/tmp/screenshots]: " server_path
    server_path=${server_path:-/tmp/screenshots}
    
    cat > "$CONFIG_FILE" << EOF
# Claude Screenshot Uploader Configuration
# Generated by setup script

# Server Configuration
SERVER_HOST="$server_host"
SERVER_USER="$server_user"
SERVER_PATH="$server_path"

# Local Configuration
LOCAL_SCREENSHOTS="\$HOME/Screenshots"

# Options
AUTO_DELETE="false"
EOF
    
    echo -e "${GREEN}✅ Configuration saved to $CONFIG_FILE${NC}"
else
    echo -e "${GREEN}✅ Configuration already exists at $CONFIG_FILE${NC}"
fi

# Test SSH connection
echo ""
echo "🔐 Testing SSH connection..."
if ssh -o BatchMode=yes -o ConnectTimeout=5 "$server_user@$server_host" exit 2>/dev/null; then
    echo -e "${GREEN}✅ SSH connection successful${NC}"
else
    echo -e "${YELLOW}⚠️  SSH connection failed. You may need to set up SSH keys:${NC}"
    echo "   ssh-copy-id $server_user@$server_host"
    echo ""
    read -p "Do you want to set up SSH keys now? (y/n) " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        if [ ! -f ~/.ssh/id_rsa ]; then
            ssh-keygen -t rsa -b 4096 -N "" -f ~/.ssh/id_rsa
        fi
        ssh-copy-id "$server_user@$server_host"
    fi
fi

# Install LaunchAgent
echo ""
echo "🚀 Installing LaunchAgent..."
PLIST_FILE="$HOME/Library/LaunchAgents/com.claudecode.screenshot-uploader.plist"
cp com.claudecode.screenshot-uploader.plist "$PLIST_FILE"

# Fix the path in plist
sed -i '' "s|~/claude-screenshot-uploader|$SCRIPT_DIR|g" "$PLIST_FILE"

# Load the service
launchctl unload "$PLIST_FILE" 2>/dev/null || true
launchctl load "$PLIST_FILE"
echo -e "${GREEN}✅ Service installed and started${NC}"

# Install xbar plugin if xbar is installed
if [ -d "/Applications/xbar.app" ] && [ -d "$HOME/Library/Application Support/xbar/plugins" ]; then
    echo ""
    echo "📊 Installing xbar plugin..."
    cp xbar/screenshot-uploader.1s.sh "$HOME/Library/Application Support/xbar/plugins/"
    chmod +x "$HOME/Library/Application Support/xbar/plugins/screenshot-uploader.1s.sh"
    
    # Restart xbar
    killall xbar 2>/dev/null || true
    sleep 1
    open -a xbar
    echo -e "${GREEN}✅ xbar plugin installed${NC}"
fi

# Configure macOS screenshot location
echo ""
echo "📸 Configuring macOS screenshot location..."
defaults write com.apple.screencapture location ~/Screenshots
killall SystemUIServer
echo -e "${GREEN}✅ Screenshots will now save to ~/Screenshots${NC}"

echo ""
echo "========================================="
echo -e "${GREEN}✅ Installation complete!${NC}"
echo ""
echo "📸 How to use:"
echo "  1. Take a screenshot (Cmd+Shift+4)"
echo "  2. File uploads automatically to your server"
echo "  3. Server path is copied to your clipboard"
echo "  4. Paste in Claude Code to use the image"
echo ""
echo "📊 Monitor status:"
if [ -d "/Applications/xbar.app" ]; then
    echo "  - Check the 📸 icon in your menu bar"
fi
echo "  - View logs: tail -f /tmp/screenshot-uploader.log"
echo "  - Edit config: open ~/.claude-screenshot-uploader.conf"
echo ""
echo "🛑 To stop the service:"
echo "  launchctl unload ~/Library/LaunchAgents/com.claudecode.screenshot-uploader.plist"
echo ""
echo "Enjoy! 🎉"